SELECT REGIONID, AVG(VOLUME) 
FROM KOPO_PRODUCT_VOLUME
WHERE 1=1
AND REGIONID = 'A01'
GROUP BY REGIONID;

SELECT [COLUMNS]
FROM [TABLE NAME]
WHERE

DISTINCT [중복제거]

--EXPRESSION
SELECT  A. REGIONID||'_'||PRODUCTGROUP AS KEYVALUE,  --A별칭 테이블의 특정컬럼
        A. *       --A 별칭 테이블의 모든 컬럼
FROM KOPO_PRODUCT_VOLUME A; --별칭 지정


SELECT DISTINCT REGIONSEG2
FROM PRO_ACTUAL_SALES;


SELECT ROUND(1.55555,2) AS ROUND_V
FROM DUAL



SELECT A.*,
        ROUND(PMAP*0.9) AS PMAP10_2
FROM PRO_PROMOTION A;


SELECT A.*,
    ROUND(A.PMAP*(0.9)) AS PMAP10_2
FROM PRO_PROMOTION A
WHERE 1=1
AND PMAP10 != ROUND(A.PMAP*(0.9));


SELECT B.*
FROM(
    SELECT A.*,
            ROUND(A.PMAP*(0.9)) AS PMAP10_2
    FROM PRO_PROMOTION A
    WHERE 1=1
)B
WHERE B.PMAP10 != B.PMAP10_2;

-- EXPRESSION으로 나온 값은 바로 쓸 수 없고, 셀렉트로 한번 감싸서 사용가능하다.
SELECT 사원명,
              직급코드
FROM 사원
WHERE 1=1
AND 급여 >= '8000000';


SELECT 사원명,
       부서코드,
       급여,
       입사일
FROM 사원
WHERE 1=1
AND SUBSTR(입사일,0,4) >= '2010'
AND SUBSTR(입사일,0,4) <= '2018';
--AND SUBSTR(입사일,0,4)
--BETWEEN 2010 AND 2018; 으로도 가능하다.

-- 여러가지 참조 후 작성문.
-- EXPRESSION을 사용했기 때문에 SELECT B.*를 한 다음 FROM()B으로 감쌀 수 있다.
SELECT B.*
FROM(
    SELECT A.*,
           SUBSTR(입사일,0,4) AS 입사년도
    FROM 사원 A
    WHERE 1=1
)B
WHERE 1=1
AND SUBSTR(입사일,0,4)
BETWEEN 2010 AND 2018;

DESC KOPO_PRODUCT_VOLUME

SELECT *
FROM KOPO_PRODUCT_VOLUME
WHERE 1=1
AND PRODUCTGROUP IN (SELECT DISTINCT RECALL_ITEM
                 FROM RECALL_PRD)

SELECT * FROM RECALL_PRD

-- '%%' 앞 뒤를 다쓰면 앞에 어떤 문자가 와도 상관없다. '0401%'만 쓰면 뒤만 유동적이다.
SELECT *
FROM KOPO_PROMOTION
WHERE 1=1
AND ITEM LIKE '%EM0%'

-- 데이터 품질검사에 많이 사용. 값이 빠졌는지 체크 가능 반대는 NOT ~
SELECT * FROM KOPO_PROMOTION
WHERE 1=1
AND MAP_PRICE IS NULL; -- IS NOT NULL


-- 변수를 만드는 방법이다. &변수명하고 값을 넣을 수 있다.
-- 아래는 &yearweek로 만든 다음 201501으로 넣음
SELECT *
FROM KOPO_PRODUCT_VOLUME
WHERE 1=1
AND YEARWEEK > &yearweek

-- 새로 테이블 만드는 방법
CREATE TABLE KOPO_PRODUCT_VOLUME_ST04 AS
SELECT *
FROM KOPO_PRODUCT_VOLUME
WHERE 1=1
AND PRODUCTGROUP = 'ST0002'

SELECT * FROM
KOPO_PRODUCT_VOLUME_ST01
UNION -- 중복이 있다면 제거하고 합친다.
SELECT * FROM
KOPO_PRODUCT_VOLUME_ST02

SELECT * FROM
KOPO_PRODUCT_VOLUME_ST01
UNION ALL -- 중복을 제거하지 않고 그냥 붙인다.
SELECT * FROM
KOPO_PRODUCT_VOLUME_ST01